// This script generates a env profile for the pipeline
// identifiable by timestamp and unique id, and saves it outside
// the repository

// POSTGRES_PASSWORD
// POSTGRES_USER

const crypto = require('crypto')
const readline = require('readline')
const fs = require('fs')

const prompt = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function makeId(length) {
  let result = '';
  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
  const charactersLength = characters.length;
  let counter = 0;
  while (counter < length) {
    result += characters.charAt(Math.floor(Math.random() * charactersLength));
    counter += 1;
  }
  return result;
}


const question = (message) => {
  return new Promise((resolve) => {
    prompt.question(message, (token) => {
      resolve(token.trim())
    })
  })
}


async function main() {
  const REFRESH_TOKEN_SECRET = crypto.randomBytes(256).toString('base64')
  const ACCESS_TOKEN_SECRET = crypto.randomBytes(256).toString('base64')
  const STWT_SECRET = crypto.randomBytes(256).toString('base64')
  const POSTGRES_PASSWORD = makeId(32)
  const POSTGRES_USER = makeId(16)

  const BRANCH = await question('Enter the branch name: ')
  const TWILIO_AUTH_TOKEN = await question('Enter the Twilio Auth Token: ')
  const TWILIO_ACCOUNT_SID = await question('Enter the Twilio Account SID: ')
  const MAIL_USER = await question('Enter the Mail User: ')
  const MAIL_PASSWORD = await question('Enter the Mail Password: ')
  const ADMIN_EMAIL = await question('Enter the Admin Email: ')
  const ADMIN_PASSWORD = await question('Enter the Admin Password: ')

  const ID = makeId(16)

  const env = `
# -----------------------------------------------
# This file was generated by scripts/generatePipelineEnv.js
# Do not edit this file directly
# Id: ${ID}, Timestamp: ${new Date().toLocaleDateString()}, Branch: ${BRANCH}
# -----------------------------------------------
REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
STWT_SECRET=${STWT_SECRET}
POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
POSTGRES_USER=${POSTGRES_USER}
TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
MAIL_PASSWORD=${MAIL_PASSWORD}
MAIL_USER=${MAIL_USER}
ADMIN_PASSWORD=${ADMIN_PASSWORD}
ADMIN_EMAIL=${ADMIN_EMAIL}
`
  fs.writeFileSync(ID + '.env', env)
}

main().then(() => {
  process.exit(0)
})